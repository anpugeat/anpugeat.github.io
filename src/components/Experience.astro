---
import { siteConfig } from "../config";
const hasExperience = siteConfig.experience && siteConfig.experience.length > 0;
---

{
  hasExperience && (
    <section id="experience" class="p-8 sm:p-12 md:p-16 lg:p-24">
      <div>
        <div class="grid grid-cols-1 lg:grid-cols-12 gap-8 lg:gap-16 items-start">
          <div class="lg:col-span-4">
            <h2 class="text-3xl sm:text-4xl md:text-5xl xl:text-7xl font-bold text-gray-900">
              Experience
            </h2>
            <div
              class="w-[75px] h-[5px] mt-2 rounded-full"
              style={`background-color: ${siteConfig.accentColor}`}
            />
          </div>

          <div class="lg:col-span-8">
            <div class="relative">
              {siteConfig.experience.map((exp, index) => {
                const Component = exp.link ? "a" : "div";
                const linkProps = exp.link
                  ? {
                      href: exp.link,
                      target: "_blank",
                      rel: "noopener noreferrer",
                    }
                  : {};
                  return (
                  <div class="group relative mb-12 last:mb-0">
                    {/* Timeline dot at top of card */}
                    <div
                      class={`absolute left-1/2 -top-2 w-4 h-4 bg-white border-2 rounded-full -translate-x-1/2 z-20 transition-all duration-300 ${
                        exp.link ? 'group-hover:-translate-y-1 group-hover:shadow-xl' : ''
                      }`}
                      style={`border-color: ${siteConfig.accentColor}; background-color: ${siteConfig.accentColor}`}
                      />
                    {/* Connecting line below card */}
                    {index < siteConfig.experience.length - 1 && (
                      <div class="absolute left-1/2 bottom-0 w-0.5 h-12 bg-gray-300 -translate-x-1/2 translate-y-full z-10" />
                    )}

                    {/* Experience card */}
                        <Component
                        {...linkProps}
                        class={`block relative p-4 sm:p-6 md:p-8 bg-gray-50 rounded-xl sm:rounded-2xl border border-gray-200 transition-all duration-300 ${
                          exp.link
                            ? "hover:bg-white hover:shadow-xl hover:border-gray-300 hover:-translate-y-1"
                            : ""
                        }`}
                        >
                        {exp.link && (
                        <div class="absolute top-1 -right-1 sm:-top-1.5 sm:-right-1.5 md:-top-2 md:-right-2 w-8 h-8 sm:w-11 sm:h-9 md:w-10 md:h-10 flex items-center justify-center bg-gray-900 rounded-lg text-white transition-all duration-300 group-hover:bg-gray-700 -z-0">
                          <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-brand-github transition-transform duration-300 group-hover:scale-110"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5" /></svg>
                        </div>
                      )}             
                          <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4">
                            <div>
                            <h3 class="text-lg sm:text-xl font-semibold text-gray-900">
                             {exp.title}
                            </h3>
                            <p
                              class="text-base sm:text-lg"
                              style={`color: ${siteConfig.accentColor}`}
                            >
                              {exp.company}
                            </p>
                            </div>
                            <span class="text-xs sm:text-sm text-gray-500 mt-2 sm:mt-0">
                              {exp.dateRange}
                            </span>
                          </div>

                          <ul class="space-y-2">
                            {exp.bullets.map((bullet) => (
                              <li class="flex items-start">
                                <span class="inline-block w-1.5 h-1.5 rounded-full bg-gray-400 mt-2 mr-3 flex-shrink-0" />
                                <span class="text-sm sm:text-base text-gray-600">
                                  {bullet}
                                </span>
                              </li>
                            ))}
                          </ul>
                        </Component>
                      </div>
                  );
              })}
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}
